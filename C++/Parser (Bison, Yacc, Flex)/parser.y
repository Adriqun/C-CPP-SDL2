/*----- Prolog section -----*/
/*Create parser.h file.*/
%defines "parser.h"

%{
	#include <iostream>
	#include <cmath>
	#pragma warning (disable: 4005)

	// This function will be generated by flex.
	extern int yylex(); // lexical analyzer

	// Not generated files.
	extern void yyerror(const char*);
%}

%token NUM

%left '-' '+'
%left '*' '/'


%%	/*----- Grammar section (rules) -----*/

input: /*empty*/
	| input line
	;

line: '\n'
	| exp '\n' {std::cout << "=" << $1 << std::endl;}
	;

exp: NUM			{$$ = $1;}
	| exp '+' exp	{$$ = $1 + $3;}
	| exp '-' exp	{$$ = $1 - $3;}
	| exp '*' exp	{$$ = $1 * $3;}
	| exp '/' exp	{$$ = $1 / $3;}
	| '(' exp ')'	{$$ = $2;}
	;

%%	/*----- User code section -----*/
